

================================================================
== Vitis HLS Report for 'example'
================================================================
* Date:           Sun Feb 19 17:12:01 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        pynq_axis_adder
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.613 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_31_1  |        ?|        ?|         3|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.61>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%acc = alloca i32 1"   --->   Operation 7 'alloca' 'acc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%spectopmodule_ln21 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_6" [pynq_axis_adder/example.cpp:21]   --->   Operation 8 'spectopmodule' 'spectopmodule_ln21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %A_V_data_V, i4 %A_V_keep_V, i4 %A_V_strb_V, i1 %A_V_last_V, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %A_V_data_V"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %A_V_keep_V"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %A_V_strb_V"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %A_V_last_V"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %B_V_data_V, i4 %B_V_keep_V, i4 %B_V_strb_V, i1 %B_V_last_V, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %B_V_data_V"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %B_V_keep_V"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %B_V_strb_V"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %B_V_last_V"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_3, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln31 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %B_V_data_V, i4 %B_V_keep_V, i4 %B_V_strb_V, i1 0, i1 %B_V_last_V, i1 0, i1 0, void @empty_4" [pynq_axis_adder/example.cpp:31]   --->   Operation 20 'specaxissidechannel' 'specaxissidechannel_ln31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln31 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %A_V_data_V, i4 %A_V_keep_V, i4 %A_V_strb_V, i1 0, i1 %A_V_last_V, i1 0, i1 0, void @empty_5" [pynq_axis_adder/example.cpp:31]   --->   Operation 21 'specaxissidechannel' 'specaxissidechannel_ln31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln31 = store i32 0, i32 %i" [pynq_axis_adder/example.cpp:31]   --->   Operation 22 'store' 'store_ln31' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln31 = br void %while.body" [pynq_axis_adder/example.cpp:31]   --->   Operation 23 'br' 'br_ln31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i_1 = load i32 %i" [pynq_axis_adder/example.cpp:35]   --->   Operation 24 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%acc_1 = load i32 %acc" [pynq_axis_adder/example.cpp:34]   --->   Operation 25 'load' 'acc_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 26 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln29 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [pynq_axis_adder/example.cpp:29]   --->   Operation 27 'specloopname' 'specloopname_ln29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%empty = read i41 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A, i32 %A_V_data_V, i4 %A_V_keep_V, i4 %A_V_strb_V, i1 %A_V_last_V"   --->   Operation 28 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node acc_3)   --->   "%tmp_data_V = extractvalue i41 %empty"   --->   Operation 29 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue i41 %empty"   --->   Operation 30 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue i41 %empty"   --->   Operation 31 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue i41 %empty"   --->   Operation 32 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (2.55ns) (out node of the LUT)   --->   "%acc_3 = add i32 %tmp_data_V, i32 %acc_1" [pynq_axis_adder/example.cpp:34]   --->   Operation 33 'add' 'acc_3' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (2.55ns)   --->   "%i_2 = add i32 %i_1, i32 1" [pynq_axis_adder/example.cpp:35]   --->   Operation 34 'add' 'i_2' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (2.47ns)   --->   "%icmp_ln37 = icmp_eq  i32 %i_2, i32 2" [pynq_axis_adder/example.cpp:37]   --->   Operation 35 'icmp' 'icmp_ln37' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %icmp_ln37, void %while.body.if.end_crit_edge, void %if.then" [pynq_axis_adder/example.cpp:37]   --->   Operation 36 'br' 'br_ln37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln37 = store i32 %acc_3, i32 %acc" [pynq_axis_adder/example.cpp:37]   --->   Operation 37 'store' 'store_ln37' <Predicate = (!icmp_ln37)> <Delay = 1.58>
ST_1 : Operation 38 [1/1] (1.58ns)   --->   "%store_ln37 = store i32 %i_2, i32 %i" [pynq_axis_adder/example.cpp:37]   --->   Operation 38 'store' 'store_ln37' <Predicate = (!icmp_ln37)> <Delay = 1.58>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln37 = br void %if.end" [pynq_axis_adder/example.cpp:37]   --->   Operation 39 'br' 'br_ln37' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.58ns)   --->   "%store_ln42 = store i32 0, i32 %acc" [pynq_axis_adder/example.cpp:42]   --->   Operation 40 'store' 'store_ln42' <Predicate = (icmp_ln37)> <Delay = 1.58>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln42 = store i32 0, i32 %i" [pynq_axis_adder/example.cpp:42]   --->   Operation 41 'store' 'store_ln42' <Predicate = (icmp_ln37)> <Delay = 1.58>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln44 = br i1 %tmp_last_V, void %if.end4, void %while.end" [pynq_axis_adder/example.cpp:44]   --->   Operation 42 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln31 = br void %while.body" [pynq_axis_adder/example.cpp:31]   --->   Operation 43 'br' 'br_ln31' <Predicate = (!tmp_last_V)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (0.00ns)   --->   "%write_ln258 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A, i32 %B_V_data_V, i4 %B_V_keep_V, i4 %B_V_strb_V, i1 %B_V_last_V, i32 %acc_3, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_last_V"   --->   Operation 44 'write' 'write_ln258' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 45 [1/2] (0.00ns)   --->   "%write_ln258 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A, i32 %B_V_data_V, i4 %B_V_keep_V, i4 %B_V_strb_V, i1 %B_V_last_V, i32 %acc_3, i4 %tmp_keep_V, i4 %tmp_strb_V, i1 %tmp_last_V"   --->   Operation 45 'write' 'write_ln258' <Predicate = (icmp_ln37)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln42 = br void %if.end" [pynq_axis_adder/example.cpp:42]   --->   Operation 46 'br' 'br_ln42' <Predicate = (icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%ret_ln48 = ret" [pynq_axis_adder/example.cpp:48]   --->   Operation 47 'ret' 'ret_ln48' <Predicate = (tmp_last_V)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 6.61ns
The critical path consists of the following:
	'alloca' operation ('i') [9]  (0 ns)
	'load' operation ('i', pynq_axis_adder/example.cpp:35) on local variable 'i' [28]  (0 ns)
	'add' operation ('i', pynq_axis_adder/example.cpp:35) [38]  (2.55 ns)
	'icmp' operation ('icmp_ln37', pynq_axis_adder/example.cpp:37) [39]  (2.47 ns)
	blocking operation 1.59 ns on control path)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
